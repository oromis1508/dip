// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SalaryWebService.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("UpdateEmployee", Description="\tThe feature checks for the correct work of the web service\r\n\tfor calculation sal" +
        "ary of employees. The feature checks \r\n\tthe function of updating added employee " +
        "by add with new data but old Id", SourceFile="Features\\UpdateEmployee.feature", SourceLine=0)]
    public partial class UpdateEmployeeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UpdateEmployee.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "UpdateEmployee", "\tThe feature checks for the correct work of the web service\r\n\tfor calculation sal" +
                    "ary of employees. The feature checks \r\n\tthe function of updating added employee " +
                    "by add with new data but old Id", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Update the created employee", new string[] {
                "mytag"}, SourceLine=6)]
        public virtual void UpdateTheCreatedEmployee()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update the created employee", new string[] {
                        "mytag"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "PrivateId",
                        "FirstName",
                        "LastName",
                        "MiddleName",
                        "Experiense",
                        "ProfessionId"});
            table1.AddRow(new string[] {
                        "666",
                        "10500id",
                        "Узбек",
                        "Ашан",
                        "Анатольевич",
                        "8",
                        "3"});
#line 8
 testRunner.Given("Created the employee on the web service with the data", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "PrivateId",
                        "FirstName",
                        "LastName",
                        "MiddleName",
                        "Experiense",
                        "ProfessionId"});
            table2.AddRow(new string[] {
                        "666",
                        "10t500id",
                        "Узбекен",
                        "Рудольф",
                        "Васгенович",
                        "3",
                        "6"});
#line 11
 testRunner.When("I update the created employee on the web service by the data", ((string)(null)), table2, "When ");
#line 14
  testRunner.And("I send request to the database \'Select em.id, em.private_id, em.first_name, em.la" +
                    "st_name, em.middle_name, em.exp, em.Profession_id from employees em where em.id=" +
                    "\'\'Employee.Id\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "PrivateId",
                        "FirstName",
                        "LastName",
                        "MiddleName",
                        "Experiense",
                        "ProfessionId"});
            table3.AddRow(new string[] {
                        "666",
                        "10t500id",
                        "Узбекен",
                        "Рудольф",
                        "Васгенович",
                        "3",
                        "6"});
#line 15
 testRunner.Then("The response data match the Employee with the data", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
