#   Full name of genymotion device
deviceName=Custom Phone - 5.0.0 - API 21 - 768x1280
#   Path to the genymotion install folder
genymotionPath=/home/ITRANSITION.CORP/a.chernik/Downloads/genymotion
#   Genymotion timeout for wait load application
genWait=30


name=JAMT Android Test
appiumTimeout=20
appiumImplicityTimeout=15
appFileName = *.apk
driverURL=http://127.0.0.1:2222/wd/hub
#   URL to appium driver
appiumIP=127.0.0.1
#   Appium IP address
appiumPort=2244
#   Appium connection port
automationName=Appium
#   Which automation engine to use 	Appium (default) or Selendroid
platformName=Android
#   Which mobile OS platform to use 	iOS, Android, or FirefoxOS
platformVersion=5.0
#   Mobile OS version 	e.g., 7.1, 4.4
#   The kind of mobile device or emulator to use 	iPhone Simulator, iPad Simulator, iPhone Retina 4-inch, Android Emulator, Galaxy S4, etc�
app=/home/ITRANSITION.CORP/a.chernik/Untitled Folder/jamt_android/src/test/resources/applications/demo.app/SecretCloset_v1.05_apkpure.com.apk
#   The local path or remote http URL to an .ipa or .apk file, or a .zip containing one of these. Appium will attempt to install this app binary on the appropriate device first. Note that this capability is not required for Android if you specify appPackage and appActivity capabilities (see below). Incompatible with browserName. 	/abs/path/to/my.apk or http://myapp.com/app.ipa
browserName
#   Name of mobile web browser to automate. Should be an empty string if automating an app instead. 	�Safari� for iOS and �Chrome�, �Chromium�, or �Browser� for Android
newCommandTimeout=60
#   How long (in seconds) Appium will wait for a new command from the client before assuming the client quit and ending the session 	e.g. 60
autoLaunch
#   Whether to have Appium install and launch the app automatically. Default true 	true, false
appActivity
#   Activity name for the Android activity you want to launch from your package 	MainActivity, .Settings
appPackage=com.zdv.secretcloset
#   Java package of the Android app you want to run 	com.example.android.myApp, com.android.settings
appWaitActivity
#   Activity name for the Android activity you want to wait for 	SplashActivity
appWaitPackage
#   Java package of the Android app you want to wait for 	com.example.android.myApp, com.android.settings
deviceReadyTimeout
# 	Timeout in seconds while waiting for device to become ready 	5
androidCoverage
# 	Fully qualified instrumentation class. Passed to -w in adb shell am instrument -e coverage true -w 	com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation
enablePerformanceLogging
# 	(Chrome and webview only) Enable Chromedriver�s performance logging (default false) 	true, false
androidDeviceReadyTimeout
# 	Timeout in seconds used to wait for a device to become ready after booting 	e.g., 30
androidDeviceSocket
# 	Devtools socket name. Needed only when tested app is a Chromium embedding browser. The socket is open by the browser and Chromedriver connects to it as a devtools client. 	e.g., chrome_devtools_remote
avd
# 	Name of avd to launch 	e.g., api19
avdLaunchTimeout
# 	How long to wait in milliseconds for an avd to launch and connect to ADB (default 120000) 	300000
avdReadyTimeout
# 	How long to wait in milliseconds for an avd to finish its boot animations (default 120000) 	300000
avdArgs
# 	Additional emulator arguments used when launching an avd 	e.g., -netfast
useKeystore
# 	Use a custom keystore to sign apks, default false 	true or false
keystorePath
# 	Path to custom keystore, default ~/.android/debug.keystore 	e.g., /path/to.keystore
keystorePassword
# 	Password for custom keystore 	e.g., foo
keyAlias
# 	Alias for key 	e.g., androiddebugkey
keyPassword
# 	Password for key 	e.g., foo
chromedriverExecutable
# 	The absolute local path to webdriver executable (if Chromium embedder provides its own webdriver, it should be used instead of original chromedriver bundled with Appium) 	/abs/path/to/webdriver
autoWebviewTimeout
# 	Amount of time to wait for Webview context to become active, in ms. Defaults to 2000 	e.g. 4
intentAction
# 	Intent action which will be used to start activity (default android.intent.action.MAIN) 	e.g.android.intent.action.MAIN, android.intent.action.VIEW
intentCategory
# 	Intent category which will be used to start activity (default android.intent.category.LAUNCHER) 	e.g. android.intent.category.LAUNCHER, android.intent.category.APP_CONTACTS
intentFlags
# 	Flags that will be used to start activity (default 0x10200000) 	e.g. 0x10200000
optionalIntentArguments
# 	Additional intent arguments that will be used to start activity. See Intent arguments 	e.g. --esn <EXTRA_KEY>, --ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE>, etc.
unicodeKeyboard
# 	Enable Unicode input, default false 	true or false
resetKeyboard
# 	Reset keyboard to its original state, after running Unicode tests with unicodeKeyboard capability. Ignored if used alone. Default false 	true or false
noSign
# 	Skip checking and signing of app with debug keys, will work only with UiAutomator and not with selendroid, default false 	true or false
ignoreUnimportantViews
# 	Calls the setCompressedLayoutHierarchy() uiautomator function. This capability can speed up secretCloset execution, since Accessibility commands will run faster ignoring some elements. The ignored elements will not be findable, which is why this capability has also been implemented as a toggle-able setting as well as a capability. Defaults to false 	true or false
